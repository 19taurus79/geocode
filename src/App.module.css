.container {
  display: grid;
  grid-template-columns: minmax(200px, 1fr) minmax(200px, 1fr) minmax(
      200px,
      1fr
    ); /* минимальная ширина 200px, максимум — растягивается */
  grid-template-rows: auto 1fr 1fr; /* header, and two rows of equal height */
  grid-template-areas:
    "header header header"
    "map dataTop input"
    "map dataTop dataBottom";
  gap: 10px;
  height: 100vh; /* можно задавать высоту контейнера */
  overflow: auto; /* разрешаем прокрутку при переполнении контейнера */
}

.header {
  grid-area: header;
}

.map {
  grid-area: map;
  height: 100%;
}

.map > div {
  height: 100%;
}

.dataTop,
.dataBottom {
  max-height: 100%; /* или конкретное значение, например, 300px */
  overflow-y: auto;
  min-width: 0;
  min-height: 0;
  box-sizing: border-box;
}

.dataTop {
  grid-area: dataTop;
  /* grid-column: 2/3; */
  /* grid-row: 1/4; */
  border: 1px solid white;
}

.dataBottom {
  grid-area: dataBottom;
  /* grid-column: 3/3; */
  /* grid-row: 3/4; */
  border: 1px solid white;
}

.input {
  grid-area: input;
  /* grid-column: 3/3; */
  /* grid-row: 1/3; */
  overflow-y: auto;
  border: 1px solid white;
  /* display: flex;
  align-items: center; */
}

.dataLoadedLayout {
  grid-template-columns: 2fr 1fr;
  grid-template-areas:
    "header header"
    "map input"
    "map dataBottom";
}

.dataLoadedLayout .dataTop {
  display: none;
}

.addressSearchHidden {
  grid-template-columns: 2fr 1fr;
  grid-template-areas:
    "header header"
    "map dataTop"
    "map dataTop";
}

.addressSearchHidden .input,
.addressSearchHidden .dataBottom {
  display: none;
}

.dataLoadedLayout.addressSearchHidden {
  grid-template-columns: 1fr;
  grid-template-areas:
    "header"
    "map"
    "map";
}

.dataLoadedLayout.addressSearchHidden .dataTop,
.dataLoadedLayout.addressSearchHidden .input,
.dataLoadedLayout.addressSearchHidden .dataBottom {
  display: none;
}
